<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ja-blogs on barabara diary</title><link>https://diohabara.github.io/ja-blog/</link><description>Recent content in Ja-blogs on barabara diary</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 19 Jul 2022 23:26:35 +0900</lastBuildDate><atom:link href="https://diohabara.github.io/ja-blog/index.xml" rel="self" type="application/rss+xml"/><item><title>はてな退職エントリー(バイト)</title><link>https://diohabara.github.io/ja-blog/quit-hatena-part-time/</link><pubDate>Tue, 19 Jul 2022 23:26:35 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/quit-hatena-part-time/</guid><description>3行まとめ 退職？ はてなでは何をしていたのか 非エンジニア向け エンジニア向け 感想 社員が優しい(☆3つ加点) 社員の能力が高い(☆3つ加点) バイト･業務委託の受け入れ体制に改善点があった(☆1つ減点) アルバイト以外の身分で働きたいと思った(☆発生せず) 時給が安い(☆1つ減点) 謝辞 参照 3行まとめ 株式会社はてなのアルバイトをやめた はてなではエンジニアのアルバイトをした 時給が安い(小並感) 退職？ はてなでアルバイトをしていましたが、最近(5月)やめました(7月19日になるまで投稿をサボっていました！！！)。
はてなでサマーインターンをした人の記事はよく見かけませんか？おそらくはてなの目玉イベントだからでしょう。一方、アルバイト(そもそもアルバイトとインターンの違いがわかっていません)をした人の記事は寡聞にしてあまり知りません。しかし、アルバイトがどのようなことをしているのか興味がある人も多いと思います。需要があると思い記事にまとめてみました。
ちなみに、この記事が対象としているのはこれからはてなでアルバイトをしようと思っている人もしくははてなでのアルバイトがどのようなものか気になっているはてなユーザーです。
はてなでは何をしていたのか 非エンジニア向け はてなブックマークというソーシャルブックマークサービスに関するチームで働いていました。ソーシャルブックマークとはオンライン上にインターネットのページを記録するサービスのことです。はてなブックマークではインターネットのページに対してコメントを残し、議論をしたり他人の議論の様子を観察したりすることができます。
はてなブックマークはユーザーからは1つのサービスに見えるのですが、実は複数のサービスが組み合わさったものです。そして、そのようなサービス群を動かすためのサーバーのいくつかははてな社のものです。そのサービスの一部が外部の会社のサーバーで動くような変更を加えました。サービスを他の会社のサーバーに移すことで、サーバーの管理が容易になり、コストが抑えられ、拡張が容易になります。流行りのクラウド化をしたわけです。
仕事で必要な知識にはアルバイトを始めた頃には知らないものもたくさんありましたが、調べる時間を頂きながら社員の方に質問をして進めました。というか、ソフトウェアエンジニアの仕事というのはこういうもので調べ物をするだけでお金がもらえるものなのです。調べものや調べながら試すことが好きな人は向いている仕事だと思います。(なおバイト)
これからバイトをするつもりの人は知識の多寡よりも、知らないことは調べればなんとかなるという経験･自信･直感があればバイトをしても大丈夫だと思います。以下はアルバイトのリンクです。
はてなアルバイト求人
はてなでのアルバイトがどのようなものか気になっているはてなユーザーはこんな感じで自分の使っているサービスができているんだとわかっていただけると幸いです。
エンジニア向け ブックマークチームでCI/CDの改善をしていました。もう少し具体的に言うとJenkins上で実行されていたCI/CDのパイプラインをGitHub Actionsに移すという作業をしていました。一部のタスクは社員の方の力が必要であったので、それを社員の方に頼んでいる間にCI/CDの高速化もやりました。
Docker、Jenkins、GitHub Actionsにはあまり詳しくなかったのですが他のレポジトリのコードを読み、ネット上に上がっているサンプルコードやGitHubのドキュメントを参考に仕事を進めました。DockerやGitHub Actionsに関して勉強をしてお金をもらっているようなものだったので、個人的には良かったと思います。
感想 星を付けるなら☆☆☆☆でした。以下採点の根拠です。
社員が優しい(☆3つ加点) 何をしても怒られません。だから心理的安全性は高いです。今までに怒られて仕事の効率が上がったことはないので、とても良かったです。また、わからないことを質問するとすぐに反応が返ってくるのも良かったです。
社員の能力が高い(☆3つ加点) 社員の技術力が高いと思いました。上で書いた質問への反応が早いことと関連しているかもしれません。
暇なときに社員の方のブログ記事やコードを読んだのですが、｢これでいいんだよこれで｣と思いながら読んでいました。ブログの内容からコンピュータに関する基礎的な知識を持っている方が多いということがわかり、質問の際に0から説明をしなくても社員さんが概要を理解していたので非常に楽でした。ただ同時に、こういう職場ばかりではないと思うので、自分が説明する能力を高めようとも思いました。
また、ソフトスキルも高いと思いました。メンターのメンタリングやマネジメントが丁寧で良かったです。目的に必要なタスクの設定やその分割をきれいにして頂き、困ったらこの人かチームメンバーに聞いておけばよいだろうと安心して働けました。また、作業で詰まっている際にあちらから1 on 1の機会を設けて頂き大変助かりました。
名前を一々挙げませんが、その他のメンバーも他人を傷つかないように気をつけながら働いていており、素晴らしい職場だったと思います。
(話が脱線します)
1ユーザーから見てはてなブックマークは中々に激しい議論の場だと思いますが、作っている人たちはどうやったら建設的な議論ができるか考えているのが印象的でした。激しいところも好きなのですが、最低限度のラインが守られると良いですね。1
バイト･業務委託の受け入れ体制に改善点があった(☆1つ減点) AWS IAMでバイト相当の権限がなく、AWS上で作業ができずアルバイトだと一部の仕事ができず社員の方に頼む必要がありました。他のチームがどうかはわかりません。 ｢バイトや業務委託用の権限を作った方が良いのでは？｣と思い、社員の方に相談しましたが元々バイトや業務委託はあまりおらず、いても必要になる場面がなかった(仕事を振らなかった)ので管理をしていないようです。
今回の自分のタスクだと必要だっただけで仕事一般に必要にはなりませんが、この他にも入社時に多少バタついた覚えがあるので伸びしろがあると思いました。
ただ、ここに時間･お金をかけるかどうかは経営上仕方のない判断な気もするので何が正しいのかはわかりません。あくまでバイトとして働きにくい部分もあったというだけです。企業には正社員でも多かれ少なかれこのような権限の問題はあると理解しています。
アルバイト以外の身分で働きたいと思った(☆発生せず) この問題は会社の問題ではないので☆は発生しません。
例えば、フルタイムのインターンの場合は｢次回のリリースに合わせた新機能の追加｣というタスクを振り、しっかりとメンタリングしながら仕事をすることが可能です。しかし、アルバイトだと稼働できる時間が細切れだったり、週に10数時間しか入れないのでどこの会社もCI/CDなどの｢今も動いているけど将来的には書き換えたい｣仕事をやらせる印象があります。もしくは｢今は動いていないけど将来的に導入しようか迷っている｣こと。
僕ならそうするかなと思っているだけで実際にそうだったのかはわかりません。
時給が安い(☆1つ減点) ソフトウェアエンジニアのバイトにしては時給が低いです。特に試用期間の時給のまま終わった(試用期間であろうがなかろうが安いですが)のでほぼ東京の最低賃金くらいの金額(1050円/時)で働いていました。試用期間が過ぎると1200円/時です。</description></item><item><title>CでCコンパイラを書いた</title><link>https://diohabara.github.io/ja-blog/c-compiler/</link><pubDate>Tue, 19 Jul 2022 23:03:20 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/c-compiler/</guid><description> 3 行まとめ 何をした？ なぜやった？ 得たもの 次にやりたいこと 謝辞 参照 3 行まとめ C で C コンパイラを書いた 大学で一応コンパイラを書いたが理解していなかったので確認のため 次は別のアセンブリ、言語で書きたい 何をした？ Rui Ueyama 氏の書いたコンパイラに関する記事と関連レポジトリを元にC コンパイラを書いた。正確には参照用のブランチを見て写経をした。途中までは要件から自分で書いていたのだが、途中バグって数日を無駄にしたので学習目的と割り切って写経に切り替えた。
なぜやった？ コンパイラを書いたことがなかったから。コンパイラとは一般に「字句解析 → 構文解析 → 意味解析 → コード生成」するソフトだろう。自分は今までコード生成、つまりアセンブリのコードを出力するところをやったことがなかった。
一応大学の講義でやった&amp;hellip;ということになっているのだが、よくわからず適当に動かしていたらテストケースが通っていたという感じである。だから理解をしながらやったのは今回が初めてとなる。
得たもの C で C のコンパイラを書くという内容だったが、C で C のコンパイラが書くことも分解すれば単純なことの繰り返しだということがわかってよかった。しかし、Rui Ueyama 氏の参考コードを読むと単純なことなのに実装するまで気付かない解決策が多い。ここらへんはやはり自分で何度も手を動かしたり、他人のコードを盗むしかないのだと思う。
インターンが中心になるとコードを書く行数が減るので意識してコードを書こうと思った。
次にやりたいこと 次はアセンブリ(Arm、RISC-V)について勉強をするか、Rust について勉強をして Rust でコンパイラを書いてみたいと思った。
前者に関しては、この記事だと x86-64 が使われていたのですが別のアセンブリも触ってみたいから。後者に関しては、C ではなくて現代的機能を持ったシステムプログラミング言語を触ってみたいから。
謝辞 このような記事を書いてくれた Rui Ueyama 氏に感謝。
参照 https://www.sigbus.info/compilerbook https://github.com/rui314/chibicc/commits/reference</description></item><item><title>｢詳説日本史｣を読んだ</title><link>https://diohabara.github.io/ja-blog/jpn-history-textbook/</link><pubDate>Mon, 27 Jun 2022 15:24:50 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/jpn-history-textbook/</guid><description> 3行まとめ 感想 次に読みたい･したい 謝辞 参照 3行まとめ 日本の歴史は土地政策の歴史 武士の登場からの怒涛の展開が面白い ページ数の関係からか説明が端折られている部分も多い 感想 面白かった。読む前は日本史の流れがわかっているのか不安だったが、今は教科書を読み整理された。
しかし、なぜ今、日本史の教科書を？
日本史は必修で小学校から高校まで学んだということになっている。しかし、中高では教員の興味のある年代にやたら長く時間(高校では1学期を使って九州･朝鮮半島に広がる古墳について学んだ覚えがある)が割かれ、全体の流れは中学受験のときに勉強したレベルで終わっていた。しかし、これから留学するということもあり、日本の概要をもう一度学びたいと思い読んだ。
｢詳説日本史｣で描かれた日本の歴史は土地に関する歴史だった。世界史だと遊牧民族と農耕民族のような対比があるのだが、日本は海で囲まれており体外的な圧力が弱かった。逆に外部から土地を得ることもできないので、限られた土地を巡った水面下の駆け引きが面白かった。
朝廷や貴族が土地支配力強化のために地方の豪族の力を借りたところ、徐々に豪族が武士となり力が移っていくのは力こそ正義ということをわからされる。そして、平氏政権という武士による政権が登場すると物語の主役は武士になり、江戸幕府まで武士の時代が続くことになる。けれども朝廷はずっと存在するという二面性みたいなものが興味深い。
ただ、ページ数の関係からか太字になっているが説明が十分でなくわかりにくい記述も多かった。全国の学生に無料で配布しようと思うとページ数はなかなか増やしにくいのかもしれないが、わかりやすい記述を最優先にしてページ数は多少増やせないのかなと思う。
次に読みたい･したい ミクロ経済について学びたい 積ん読していて、日本史を読んでいて土地を介した経済に興味を持ったから 謝辞 歴史を作った人に感謝。
参照 詳説日本史</description></item><item><title>強い孤独感と充実感</title><link>https://diohabara.github.io/ja-blog/lonely-content/</link><pubDate>Fri, 17 Jun 2022 00:32:32 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/lonely-content/</guid><description>謝辞 近況 &amp;ldquo;P.S.&amp;quot; 謝辞 Indeedで仕事ができない僕と一緒に働いてくださる同じチームの方々ありがとうございます。
近況 最近は平日はIndeedで4日ほどアルバイトをしている。その帰りは勉強すると決めているので、家には直接帰らず席の空いたマックや自宅近くの公園で本を読んだり勉強をしている。
マックや公園で強く感じるのは孤独感だ。一緒に勉強をする人もいないし、勉強の成果を共有する人もいない。ただ、黙々と勉強をすることで自分の知識が広がっているのを感じている。
同じような感覚を覚えたことがある。予備校生だったときだ。高校、大学は割と惰性で過ごしていたと思う。一方、予備校のときはかなり自由だった。黙々と自分ですることを決めて勉強していた。予定も結構細かく立て、どのような目標の立て方が生産性を最大化するのか1ヶ月毎に試していたと思う。
自分の高校からは予備校に行く人が自分だけで強い孤独感を感じていた。おまけに自分の所属していた予備校は進学校の人ばかりで周りは知り合い同士だった。そんな環境の中で独りで勉強することは辛くも豊かな時間だった。
今会社には友達はいない。リアルのオフィスに集まってインターン同期と友達になるというのはすごく良いことだと思う。しかし、まぁそうじゃないことが逆に自分にとって利益になることもあるんだということがわかった良い機会だった。友達がいないからインターン終わりに勉強ができる。
自分はこれから知り合いが一人もいない大学に行く(はず)が、孤独感だけでなく充実感も強く感じる1-2年にしたいと密かに決意を固めたのであった。
&amp;ldquo;P.S.&amp;rdquo; インターンに行っていない残りの3日間は割と文化的な生活をしており、上記のように感傷に浸るのはインターンとして働く4日間のみです。</description></item><item><title>｢プロセッサを支える技術｣を読んだ</title><link>https://diohabara.github.io/ja-blog/review-tech-to-support-processors/</link><pubDate>Tue, 17 May 2022 01:24:42 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/review-tech-to-support-processors/</guid><description>感想 次に読みたい･したい 謝辞 参照 感想 読んで良かったとは思いましたが、人におすすめはしないでしょう。コンピュータ・アーキテクチャの教科書と最新のサーベイ論文を読んだ方が良いと思うからです。
本書では学部の授業･教科書で勉強するようなコンピュータ･アーキテクチャに関することを復習できました。 忘れていることや、教科書と比べて説明がわかりにくいと思うことが多々ありました。特にメモリに関連した部分です。理解が浅いと読みにくいので、ある程度理解している人が読むべき本なのでしょう。本書を読んで改めてコンピュータ・アーキテクチャに関する理解が浅いことを感じたので後で復習をしようと思います。
コンピュータ・アーキテクチャの授業･教科書では学ばないけれども本書で取り上げられていたこととして仮想化や、マルチプロセッサ、GPGPU が上げられます。 OpenCLも単語を聞いただけでしたが、本書を読み OpenCL とは業界の標準的な GPGPU のプログラミングシステムだということが学べてよかったです。 ただ、発展的な内容は出版当時の 2011 年の情報であり古いものも多い印象です。そのためわざわざ本書を買って学ぶべきだとは思いませんでした。
次に読みたい･したい 理論的な部分はパタヘネを再度読みたいと思います。余力があれば読み終えていないヘネパタも読みたいです。 実践的な部分は、プロセッサに関して実装レベルで理解していないことが多いので、また CPU の実装をしたいと思います。ちょうど RISC-V と Arm の違いについて学ぼうと思っていたので良い機会です。
謝辞 著者の Hisa Ando さん、面白い本をありがとうございます。
参照 プロセッサを支える技術</description></item><item><title>はろーわーるど</title><link>https://diohabara.github.io/ja-blog/hello-world/</link><pubDate>Sat, 07 May 2022 03:48:57 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/hello-world/</guid><description> 3行まとめ 謝辞 参照 3行まとめ ブログを作った Hugoとgokarnaを使った これはテンプレート 謝辞 gokarnaの作者の人ありがとうございます。
参照 https://github.com/526avijitgupta/gokarna</description></item></channel></rss>