<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>review on barabara diary</title><link>https://diohabara.github.io/tags/review/</link><description>Recent content in review on barabara diary</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 17 May 2022 01:24:42 +0900</lastBuildDate><atom:link href="https://diohabara.github.io/tags/review/index.xml" rel="self" type="application/rss+xml"/><item><title>｢プロセッサを支える技術｣を読んだ</title><link>https://diohabara.github.io/ja-blog/review-tech-to-support-processors/</link><pubDate>Tue, 17 May 2022 01:24:42 +0900</pubDate><guid>https://diohabara.github.io/ja-blog/review-tech-to-support-processors/</guid><description>感想 次に読みたい･したい 謝辞 参照 感想 読んで良かったとは思いましたが、人におすすめはしないでしょう。コンピュータ・アーキテクチャの教科書と最新のサーベイ論文を読んだ方が良いと思うからです。
本書では学部の授業･教科書で勉強するようなコンピュータ･アーキテクチャに関することを復習できました。 忘れていることや、教科書と比べて説明がわかりにくいと思うことが多々ありました。特にメモリに関連した部分です。理解が浅いと読みにくいので、ある程度理解している人が読むべき本なのでしょう。本書を読んで改めてコンピュータ・アーキテクチャに関する理解が浅いことを感じたので後で復習をしようと思います。
コンピュータ・アーキテクチャの授業･教科書では学ばないけれども本書で取り上げられていたこととして仮想化や、マルチプロセッサ、GPGPU が上げられます。 OpenCLも単語を聞いただけでしたが、本書を読み OpenCL とは業界の標準的な GPGPU のプログラミングシステムだということが学べてよかったです。 ただ、発展的な内容は出版当時の 2011 年の情報であり古いものも多い印象です。そのためわざわざ本書を買って学ぶべきだとは思いませんでした。
次に読みたい･したい 理論的な部分はパタヘネを再度読みたいと思います。余力があれば読み終えていないヘネパタも読みたいです。 実践的な部分は、プロセッサに関して実装レベルで理解していないことが多いので、また CPU の実装をしたいと思います。ちょうど RISC-V と Arm の違いについて学ぼうと思っていたので良い機会です。
謝辞 著者の Hisa Ando さん、面白い本をありがとうございます。
参照 プロセッサを支える技術</description></item></channel></rss>